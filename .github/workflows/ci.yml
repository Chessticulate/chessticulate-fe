name: CI/CD

on:
  push:
    branches: ["**"]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Use the Node.js version compatible with your Next.js project

      - name: Install Dependencies
        run: npm install

      - name: Run Prettier
        run: npx prettier --check .

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Use the Node.js version compatible with your Next.js project

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Check Version Increment
        run: scripts/check_version.sh

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Use the Node.js version compatible with your Next.js project

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

  push-to-registry:
    runs-on: ubuntu-latest
    needs: [format, lint, build, check-version]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get version number
        run: |
          VERSION=$(./scripts/get_version.sh)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push amd64 image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/chessticulate/chessticulate-fe-linux-amd64:v${{ env.VERSION }}
            ghcr.io/chessticulate/chessticulate-fe-linux-amd64:latest

      - name: Build and push arm64 image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/arm64/v8
          tags: |
            ghcr.io/chessticulate/chessticulate-fe-linux-arm64v8:v${{ env.VERSION }}
            ghcr.io/chessticulate/chessticulate-fe-linux-arm64v8:latest
